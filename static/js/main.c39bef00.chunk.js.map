{"version":3,"sources":["componets/Tariffs/Tariff.js","componets/TariffsList/TariffsList.js","App.js","serviceWorker.js","index.js"],"names":["Tariff","tariff","className","hitsale","hit","sale","name","titleText","price","chase","month","trafic","mb","gb","unlimitStatus","unlimit","socialStatus","social","map","o","src","alt","internetOutSide","timeMinStatus","time","min","messageCountAndSmS","messageCount","sms","buyButton","text","App","teleList","id","internetOutSideStatus","untlimit","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+OAEe,SAASA,EAAT,GAA6B,IAAXC,EAAU,EAAVA,OAC7B,OACI,yBAAKC,UAAU,QACX,wBAAIA,UAAU,cACTD,EAAOE,SACJ,yBAAKD,UAAU,WACX,yBAAKA,UAAU,OACVD,EAAOG,KAEZ,yBAAKF,UAAU,QACVD,EAAOI,OAGpB,wBAAIH,UAAU,qBACV,yBAAKA,UAAU,SAAUD,EAAOK,OAEpC,wBAAIJ,UAAU,qBACTD,EAAOM,UACR,yBAAKL,UAAU,SACVD,EAAOO,QAGhB,wBAAIN,UAAU,qBACV,yBAAKA,UAAU,UACVD,EAAOQ,OAEZ,yBAAKP,UAAU,SACVD,EAAOS,QAGhB,wBAAIR,UAAU,uBACd,wBAAIA,UAAU,qBACV,yBAAKA,UAAU,UACVD,EAAOU,OACPV,EAAOW,GACPX,EAAOY,KAGhB,wBAAIX,UAAU,qBACTD,EAAOa,eAAiB,yBAAKZ,UAAU,gBAAiBD,EAAOc,UAEpE,wBAAIb,UAAU,qBACV,yBAAKA,UAAU,UACVD,EAAOe,cAAgBf,EAAOgB,OAAOC,KAAI,SAAAC,GAAC,OAAI,yBAAKjB,UAAU,YAAYkB,IAAKD,EAAGE,IAAI,oBAE1F,4BAAKpB,EAAOqB,kBAEhB,wBAAIpB,UAAU,qBACTD,EAAOsB,eACJ,yBAAKrB,UAAU,QACVD,EAAOuB,KAAM,IACbvB,EAAOwB,MAIpB,wBAAIvB,UAAU,qBACTD,EAAOyB,oBACJ,yBAAKxB,UAAU,gBACVD,EAAO0B,aAAc,IACrB1B,EAAO2B,MAIpB,wBAAI1B,UAAU,qBACV,yBAAKA,UAAU,UACVD,EAAO4B,YAGhB,wBAAI3B,UAAU,sBACV,yBAAKA,UAAU,QACVD,EAAO6B,SCrEjB,SAASC,IACpB,IAAOd,EAAS,CACT,uDACA,uDACA,uDACA,uDACA,uDACA,wDACA,yDAEHe,EAAW,CACb,CAACC,GAAI,EAAG3B,KAAM,sEAAgBE,MAAO,IAAKC,MAAO,SAAKC,MAAO,kCAAUC,OAAQ,GAAIE,GAAI,eAAME,QAAS,sEACpGE,OAAQA,EAAQO,KAAM,IAAIC,IAAK,sBAAQK,KAAM,6GAA8BH,aAAc,GAAIC,IAAK,MAAOC,UAAW,2CACpHzB,IAAK,qBAAOC,KAAM,uCAAUF,SAAS,EAAMa,cAAc,EAAMF,eAAe,EAAMY,oBAAoB,EAAMH,eAAe,GAE7H,CAACU,GAAI,EAAG3B,KAAM,0DAAcE,MAAO,IAAKC,MAAO,SAAKC,MAAO,kCAAUC,OAAQ,GAAIE,GAAI,eAAME,QAAS,sEACpGE,OAAQA,EAAQO,KAAM,IAAKC,IAAK,sBAAQK,KAAM,6GAA8BH,aAAc,GAAIC,IAAK,MAAOC,UAAW,2CACrHzB,IAAK,qBAAOC,KAAM,uCAAUF,SAAS,EAAOa,cAAc,EAAMF,eAAe,EAAMY,oBAAoB,EAAOH,eAAe,GAE/H,CAACU,GAAI,EAAG3B,KAAM,4DAAgBE,MAAO,IAAKC,MAAO,SAAKC,MAAO,kCAAUC,OAAQ,GAAIE,GAAI,eAAME,QAAS,sEACtGE,OAAQA,EAAQK,gBAAiB,iHAAwBE,KAAM,IAAKC,IAAK,sBAAQK,KAAM,6GAA8BH,aAAc,GAAIC,IAAK,MAAOC,UAAW,2CAC9JzB,IAAK,qBAAOC,KAAM,uCAAUF,SAAS,EAAOa,cAAc,EAAMF,eAAe,EAAMY,oBAAoB,EAAOH,eAAe,GAE/H,CAACU,GAAI,EAAG3B,KAAM,sEAAgBE,MAAO,IAAKC,MAAO,SAAKC,MAAO,kCAAUC,OAAQ,EAAGE,GAAI,eAAME,QAAS,sEACrGE,OAAQA,EAAQO,KAAM,IAAKC,IAAK,sBAAQK,KAAM,6GAA8BH,aAAc,GAAIC,IAAK,MAAOC,UAAW,2CACrHzB,IAAK,qBAAOC,KAAM,uCAAUF,SAAS,EAAOa,cAAc,EAAOF,eAAe,EAAOY,oBAAoB,EAAOQ,uBAAuB,EAAKX,eAAe,GAE7J,CAACU,GAAI,EAAG3B,KAAM,2BAAaE,MAAO,EAAGC,MAAO,SAAKC,MAAO,4BAASC,OAAQ,EAAGE,GAAI,eAAME,QAAS,sEAC/FE,OAAQA,EAAQO,KAAM,IAAKC,IAAK,sBAAQK,KAAM,6GAA8BH,aAAc,GAAIC,IAAK,MAAOC,UAAW,2CACrHzB,IAAK,qBAAOC,KAAM,uCAAUF,SAAS,EAAOa,cAAc,EAAOF,eAAe,EAAOY,oBAAoB,EAAOH,eAAe,GAEjI,CAACU,GAAI,EAAG3B,KAAM,mDAAYE,MAAO,IAAKC,MAAO,SAAKC,MAAO,kCAAUC,OAAQ,sHAAwBI,QAAS,sEAC5GE,OAAQA,EAAQO,KAAM,IAAKC,IAAK,sBAAQK,KAAM,6GAA8BH,aAAc,GAAIC,IAAK,MAAOC,UAAW,2CACrHzB,IAAK,qBAAOC,KAAM,uCAAUF,SAAS,EAAOa,cAAc,EAAOF,eAAe,EAAOY,oBAAoB,EAAMH,eAAe,GAEhI,CAACU,GAAI,EAAG3B,KAAM,6CAAWE,MAAO,KAAMC,MAAO,SAAKC,MAAO,kCAAUC,OAAQ,GAAIE,GAAI,eAAME,QAAS,sEAClGE,OAAQA,EAAQO,KAAM,IAAMC,IAAK,sBAAQK,KAAM,6GAA8BH,aAAc,IAAKC,IAAK,MAAOC,UAAW,2CACvHzB,IAAK,qBAAOC,KAAM,uCAAUF,SAAS,EAAOa,cAAc,EAAOF,eAAe,EAAOY,oBAAoB,EAAMH,eAAe,GAEhI,CAACU,GAAI,EAAG3B,KAAM,2EAAgBC,UAAW,uHAAyB4B,SAAU,sEAC5ElB,OAAQA,EAAQO,KAAM,IAAMC,IAAK,sBAAQE,aAAc,IAAKC,IAAK,MAAOC,UAAW,2CACnFzB,IAAK,qBAAOC,KAAM,uCAAUF,SAAS,EAAOa,cAAc,EAAOF,eAAe,EAAOY,oBAAoB,EAAOH,eAAe,GAEjI,CAACU,GAAI,EAAG3B,KAAM,6HAA0BC,UAAW,uHAAyB4B,SAAU,sEACtFlB,OAAQA,EAAQO,KAAM,IAAKC,IAAK,sBAASE,aAAc,GAAIC,IAAK,MAAOC,UAAW,2CAClFzB,IAAK,qBAAOC,KAAM,uCAAUF,SAAS,EAAOa,cAAc,EAAOF,eAAe,EAAOY,oBAAoB,EAAOQ,uBAAuB,EAAOX,eAAe,GAE/J,CAACU,GAAI,GAAI3B,KAAM,qGAAsBE,MAAO,IAAKC,MAAO,SAAKC,MAAO,kCAAUC,OAAQ,IAAKC,GAAI,eAAMuB,SAAU,sEAC/GlB,OAAQA,EAAQO,KAAM,IAAKC,IAAK,sBAAQK,KAAM,6GAA8BH,aAAc,IAAKC,IAAK,MAAOC,UAAW,2CACtHzB,IAAK,qBAAOC,KAAM,uCAAUF,SAAS,EAAOa,cAAc,EAAOF,eAAe,EAAOY,oBAAoB,EAAMH,eAAe,IAKpI,OAEI,oCACES,EAASd,KAAI,SAAAC,GAAC,OAAI,kBAACnB,EAAD,CAAQC,OAAUkB,QC7C/BY,MAXf,WACE,OACE,yBAAK7B,UAAU,OACb,oEACA,kBAAC,EAAD,QCIckC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c39bef00.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Tariff( {tariff} ) {\n    return (\n        <div className=\"main\">\n            <ul className=\"main-block\">\n                {tariff.hitsale &&\n                    <div className=\"hitsale\">\n                        <div className=\"hit\">\n                            {tariff.hit}\n                        </div>\n                        <div className=\"sale\" >\n                            {tariff.sale}\n                        </div>\n                    </div>}\n                <li className=\"main-block-item-1\">\n                    <div className=\"title\" >{tariff.name}</div>\n                </li>\n                <li className=\"main-block-item-2\">\n                    {tariff.titleText}\n                    <div className=\"price\">\n                        {tariff.price}\n                    </div>\n                </li>\n                <li className=\"main-block-item-3\">\n                    <div className=\"dollar\">\n                        {tariff.chase}\n                    </div>\n                    <div className=\"month\">\n                        {tariff.month}\n                    </div>\n                </li>\n                <li className=\"main-block-item-11\"></li>\n                <li className=\"main-block-item-4\">\n                    <div className=\"trafic\" >\n                        {tariff.trafic}\n                        {tariff.mb}\n                        {tariff.gb}\n                    </div>\n                </li>\n                <li className=\"main-block-item-5\">\n                    {tariff.unlimitStatus && <div className=\"withoutlimit\" >{tariff.unlimit}</div>}\n                </li>\n                <li className=\"main-block-item-6\">\n                    <div className=\"social\" >\n                        {tariff.socialStatus && tariff.social.map(o => <img className=\"imgSocial\" src={o} alt=\"social-icon\" />)}\n                    </div>\n                    <h4>{tariff.internetOutSide}</h4>\n                </li>\n                <li className=\"main-block-item-7\">\n                    {tariff.timeMinStatus &&\n                        <div className=\"time\" >\n                            {tariff.time}{\" \"}\n                            {tariff.min}\n                        </div>\n                    }\n                </li>\n                <li className=\"main-block-item-8\">\n                    {tariff.messageCountAndSmS &&\n                        <div className=\"messageCount\" >\n                            {tariff.messageCount}{\" \"}\n                            {tariff.sms}\n                        </div>\n                    }\n                </li>\n                <li className=\"main-block-item-9\">\n                    <div className=\"butBtn\">\n                        {tariff.buyButton}\n                    </div>\n                </li>\n                <li className=\"main-block-item-10\">\n                    <div className=\"text\" >\n                        {tariff.text}\n                    </div>\n                </li>  \n            </ul>\n        </div >\n    )\n}","import React from 'react'\nimport Tariff from '../Tariffs/Tariff'\n\nexport default function App() {\n    const  social = [\n           \"https://msk.tele2.ru/api/media/asset?mediaId=m220005\",\n           \"https://msk.tele2.ru/api/media/asset?mediaId=m220001\",\n           \"https://msk.tele2.ru/api/media/asset?mediaId=m220003\",\n           \"https://msk.tele2.ru/api/media/asset?mediaId=m220006\",\n           \"https://msk.tele2.ru/api/media/asset?mediaId=m220004\",\n           \"https://msk.tele2.ru/api/media/asset?mediaId=m1990041\",\n           \"https://msk.tele2.ru/api/media/asset?mediaId=m1680033\",\n    ];\n  const teleList = [\n      {id: 1, name: \"Везде онлайн\", price: 500, chase: \"₽\", month: \"/месяц\", trafic: 40, gb: 'ГБ', unlimit: \"+безлимитные\",\n        social: social, time: 500,min: \"мин.\", text: \"+ безлимит на Tele2 России\", messageCount: 50, sms: \"SMS\", buyButton: \"Купить SIM\",\n        hit: 'Хит', sale: 'продаж', hitsale: true, socialStatus: true, unlimitStatus: true, messageCountAndSmS: true, timeMinStatus: true},\n        \n        {id: 2, name: \"Мой онлайн\", price: 400, chase: \"₽\", month: \"/месяц\", trafic: 15, gb: 'ГБ', unlimit: \"+безлимитные\",\n        social: social, time: 500, min: \"мин.\", text: \"+ безлимит на Tele2 России\", messageCount: 50, sms: \"SMS\", buyButton: \"Купить SIM\",\n        hit: 'Хит', sale: 'продаж', hitsale: false, socialStatus: true, unlimitStatus: true, messageCountAndSmS: false, timeMinStatus: true},\n \n        {id: 3, name: \"Мой онлайн +\", price: 700, chase: \"₽\", month: \"/месяц\", trafic: 30, gb: 'ГБ', unlimit: \"+безлимитные\",\n        social: social, internetOutSide: \"Интернет за границей\", time: 800, min: \"мин.\", text: \"+ безлимит на Tele2 России\", messageCount: 50, sms: \"SMS\", buyButton: \"Купить SIM\",\n        hit: 'Хит', sale: 'продаж', hitsale: false, socialStatus: true, unlimitStatus: true, messageCountAndSmS: false, timeMinStatus: true},\n \n        {id: 4, name: \"Мой разговор\", price: 200, chase: \"₽\", month: \"/месяц\", trafic: 2, gb: 'ГБ', unlimit: \"+безлимитные\",\n        social: social, time: 200, min: \"мин.\", text: \"+ безлимит на Tele2 России\", messageCount: 50, sms: \"SMS\", buyButton: \"Купить SIM\",\n        hit: 'Хит', sale: 'продаж', hitsale: false, socialStatus: false, unlimitStatus: false, messageCountAndSmS: false, internetOutSideStatus: true,timeMinStatus: true},\n \n        {id: 5, name: \"Мой Tele2\", price: 7, chase: \"₽\", month: \"/день\", trafic: 5, gb: 'ГБ', unlimit: \"+безлимитные\",\n        social: social, time: 200, min: \"мин.\", text: \"+ безлимит на Tele2 России\", messageCount: 50, sms: \"SMS\", buyButton: \"Купить SIM\",\n        hit: 'Хит', sale: 'продаж', hitsale: false, socialStatus: false, unlimitStatus: false, messageCountAndSmS: false, timeMinStatus: true},\n \n        {id: 6, name: \"Безлимит\", price: 650, chase: \"₽\", month: \"/месяц\", trafic: \"БЕЗЛИМИТНЫЙ ИНТЕРНЕТ\", unlimit: \"+безлимитные\",\n        social: social, time: 500, min: \"мин.\", text: \"+ безлимит на Tele2 России\", messageCount: 50, sms: \"SMS\", buyButton: \"Купить SIM\",\n        hit: 'Хит', sale: 'продаж', hitsale: false, socialStatus: false, unlimitStatus: false, messageCountAndSmS: true, timeMinStatus: true},\n \n        {id: 7, name: \"Премиум\", price: 1500, chase: \"₽\", month: \"/месяц\", trafic: 50, gb: 'ГБ', unlimit: \"+безлимитные\",\n        social: social, time: 2000, min: \"мин.\", text: \"+ безлимит на Tele2 России\", messageCount: 500, sms: \"SMS\", buyButton: \"Купить SIM\",\n        hit: 'Хит', sale: 'продаж', hitsale: false, socialStatus: false, unlimitStatus: false, messageCountAndSmS: true, timeMinStatus: true},\n \n        {id: 8, name: \"Классический\", titleText: \"Без абонентской платы\", untlimit: \"+безлимитные\",\n        social: social, time: 2000, min: \"мин.\", messageCount: 500, sms: \"SMS\", buyButton: \"Купить SIM\",\n        hit: 'Хит', sale: 'продаж', hitsale: false, socialStatus: false, unlimitStatus: false, messageCountAndSmS: false, timeMinStatus: false},\n \n        {id: 9, name: \"Интернет для устройств\", titleText: \"Без абонентской платы\", untlimit: \"+безлимитные\",\n        social: social, time: 500, min: \"мин.\",  messageCount: 50, sms: \"SMS\", buyButton: \"Купить SIM\",\n        hit: 'Хит', sale: 'продаж', hitsale: false, socialStatus: false, unlimitStatus: false, messageCountAndSmS: false, internetOutSideStatus: false, timeMinStatus: false},\n \n        {id: 10, name: \"Интернет для вещей\", price: 100, chase: \"₽\", month: \"/месяц\", trafic: 300, mb: 'МБ', untlimit: \"+безлимитные\",\n        social: social, time: 300, min: \"мин.\", text: \"+ безлимит на Tele2 России\", messageCount: 100, sms: \"SMS\", buyButton: \"Купить SIM\",\n        hit: 'Хит', sale: 'продаж', hitsale: false, socialStatus: false, unlimitStatus: false, messageCountAndSmS: true, timeMinStatus: true},\n \n    ];\n\n\n    return (\n        \n        <>\n         {teleList.map(o => <Tariff tariff = {o}\n         />)}\n         </>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport TariffsList from './componets/TariffsList/TariffsList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2>Тарифы</h2>\n      <TariffsList />\n    \n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}